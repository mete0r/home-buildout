[buildout]
parts += mailboxes
         mailboxes-tools

[mailboxes]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = MAILBOXEN='
       ${:mailboxes}
       '
       
       for mailbox in $MAILBOXEN; do
       eval mailbox=$mailbox
       echo Maildir $mailbox
       [ -d $mailbox ] || maildirmake $mailbox
       done

mailboxes =
default = ${home:directory}/Maildir

[mailboxes-tools]
recipe = collective.recipe.template
mode=0700
output=${buildout:bin-directory}/dedup-maildir
input=inline:
      #!/bin/sh
      set -e
      [ "$1" = "" ] && MAILDIR=. || MAILDIR=$1
      [ "$2" = "" ] && CACHESIZE=500000 || CACHESIZE=$2

      cd $MAILDIR
      pwd
      [ -d cur ] || (echo cur/ is missing!; exit 1)
      [ -d dup ] || mkdir dup
      echo cache size: $CACHESIZE

      rm -f msgids.cache
      rm -f dups.cache
      rm -f del.cache

      N_FILES=$(ls cur | wc -l)
      echo Files: $N_FILES

      echo Extracting Message-IDs...
      for i in cur/*; do nice reformail -x Message-ID: <$i; done > msgids.cache
     
      TOTAL=$(cat msgids.cache | wc -l)
      echo Total: $TOTAL

      [ "$N_FILES" = "$TOTAL" ] || (echo 'Error: files and msgids not match'; exit 1)

      UNIQ=$(cat msgids.cache | sort -u | wc -l)
      echo Unique: $UNIQ

      [ "$TOTAL" = "$UNIQ" ] && exit 0

      TODELETE=$(for i in cur/*; do nice reformail -D $CACHESIZE dups.cache < $i && echo $i; done | wc -l)
      echo To-delete: $TODELETE

      [ $TODELETE = "0" ] && exit 0

      SUM=$(expr $UNIQ + $TODELETE)
      echo SUM: $SUM
      [ "$TOTAL" = "$SUM" ] || (echo 'Error: cache not match -- try larger cache size'; exit 1)

      echo "backup cur/ ..."
      tar cfz cur.tar.gz cur

      rm -f del.cache
      for i in cur/*; do nice reformail -D $CACHESIZE del.cache < $i && mv -fv $i dup; done | nl | tee deleted.txt
      REMAINS=$(ls cur | wc -l)
      echo Remaining msgs: $REMAINS
      [ "$UNIQ" = "$REMAINS" ] || (echo not match; exit 1)
